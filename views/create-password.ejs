<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Create Password | AutoBids - Automate freelancer bidding with chatgpt</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Tailwind CSS AI Startup & Technology Saas & AI Software Landing Page Template, ai agency, ai application, ai business, ai, creative ai art, ai it solutions, modern web ai, multipurpose, saas, nft art, nft software, tailwind css." name="description" />
    <meta content="coderthemes" name="author" />

    <!-- App favicon -->
    <link rel="shortcut icon" href="/assets/images/favicon.ico">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" type="text/css">
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Animate.css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    
    <style>
        :root {
            --primary: #3b82f6;
            --primary-hover: #2563eb;
            --secondary: #60a5fa;
            --dark-blue: #0f172a;
            --medium-blue: #1e293b;
            --light-blue: #334155;
            --accent-purple: #8b5cf6;
            --accent-pink: #ec4899;
            --text-light: rgba(255, 255, 255, 0.9);
            --text-lighter: rgba(255, 255, 255, 0.6);
            --border-color: rgba(59, 130, 246, 0.2);
            --card-bg: rgba(30, 41, 59, 0.7);
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Outfit', sans-serif;
        }
        
        body {
            background-color: var(--dark-blue);
            color: var(--text-light);
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        /* Animated Background */
        .stars-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }
        
        .star {
            position: absolute;
            background-color: #fff;
            border-radius: 50%;
            opacity: 0.3;
            animation: twinkle var(--duration) infinite ease-in-out;
            animation-delay: var(--delay);
        }
        
        @keyframes twinkle {
            0%, 100% { opacity: 0.3; }
            50% { opacity: 0.8; }
        }
        
        /* Animated Gradient Background */
        .gradient-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            background: linear-gradient(125deg, var(--dark-blue), var(--medium-blue), var(--light-blue), var(--medium-blue), var(--dark-blue));
            background-size: 400% 400%;
            animation: gradientAnimation 15s ease infinite;
        }
        
        @keyframes gradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        /* Glowing Orbs */
        .orb {
            position: absolute;
            border-radius: 50%;
            filter: blur(80px);
            opacity: 0.15;
            z-index: -1;
        }
        
        .orb-1 {
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, var(--accent-purple), var(--primary));
            top: -100px;
            right: -100px;
            animation: float 8s ease-in-out infinite;
        }
        
        .orb-2 {
            width: 400px;
            height: 400px;
            background: radial-gradient(circle, var(--accent-pink), var(--primary));
            bottom: -200px;
            left: -200px;
            animation: float 10s ease-in-out infinite reverse;
        }
        
        .orb-3 {
            width: 200px;
            height: 200px;
            background: radial-gradient(circle, var(--secondary), var(--primary));
            top: 50%;
            right: 10%;
            animation: float 12s ease-in-out infinite 2s;
        }
        
        @keyframes float {
            0%, 100% { transform: translate(0, 0); }
            50% { transform: translate(-20px, -30px); }
        }
        
        /* Form Styles */
        .form-control {
            background-color: rgba(15, 23, 42, 0.6);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            color: #fff;
            padding: 12px 16px;
            transition: all 0.3s ease;
            margin-bottom: 15px;
        }
        
        .form-control:focus {
            background-color: rgba(15, 23, 42, 0.8);
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
            color: #fff;
        }
        
        /* Button Styles */
        .btn {
            border-radius: 8px;
            padding: 12px 20px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: linear-gradient(to right, var(--primary), var(--primary-hover));
            border: none;
            color: white;
        }
        
        .btn-primary:hover {
            background: linear-gradient(to right, var(--primary-hover), var(--primary));
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
        }
        
        /* Card Styles */
        .card {
            background-color: var(--card-bg);
            backdrop-filter: blur(10px);
            border: 1px solid var(--border-color);
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            border-color: rgba(59, 130, 246, 0.4);
        }
        
        /* Alert Styles */
        .alert {
            background-color: rgba(239, 68, 68, 0.2);
            border: 1px solid rgba(239, 68, 68, 0.3);
            border-radius: 8px;
            color: #fff;
            padding: 12px 16px;
            margin-bottom: 15px;
        }
    </style>
</head>

<body>
    <!-- Background Elements -->
    <div class="gradient-bg"></div>
    <div class="stars-container" id="stars-container"></div>
    <div class="orb orb-1"></div>
    <div class="orb orb-2"></div>
    <div class="orb orb-3"></div>

    <section class="d-flex align-items-center py-6 px-0 lg:p-10 w-100 min-vh-100">
        <div class="container">
            <div class="card mx-auto" style="max-width: 500px;">
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        <a href="/" class="d-inline-block mb-4">
                            <img src="/images/bidmanwhite.png" alt="AutoBids Logo" style="height: 40px;">
                        </a>
                        <h4 class="text-white fw-bold mb-3">Update Information</h4>
                        <p class="text-white-50 mb-4">Update Phone, Email and Password for logging in.</p>
                    </div>
                    
                    <form class="user" method="POST" action="/create-password">
                        <input type="hidden" name="token" value="<%= token %>">
                        <% if (messages.error) { %>
                            <div class="alert" role="alert">
                                <%= messages.error %>
                            </div>
                        <% } %>
                        
                        <div class="form-group">
                            <input type="text" class="form-control" id="input-phoneNo" name="phoneNo" placeholder="Enter your Phone No" required autofocus="on">
                        </div>
                        
                        <div class="form-group">
                            <input type="email" class="form-control" id="input-Email" name="email" placeholder="Enter your Email" required>
                        </div>
                        
                        <div class="form-group">
                            <input type="password" class="form-control" id="input-password" name="password" placeholder="Enter New Password" required>
                        </div>
                        
                        <div class="form-group">
                            <input type="password" class="form-control" id="input-confirm-password" name="confirmPassword" placeholder="Confirm New Password" required>
                        </div>
                        
                        <button type="submit" class="btn btn-primary w-100 mt-3">Create Password</button>
                    </form>
                    
                    <div class="text-center mt-4">
                        <p class="text-white-50">Back to login? <a href="/login" class="text-primary fw-semibold">Login</a></p>
                    </div>
                </div>
            </div>
            
            <!-- Footer -->
            <div class="text-center mt-4">
                <p class="text-white-50">
                    Â© <script>document.write(new Date().getFullYear())</script> AutoBids
                </p>
            </div>
        </div>
    </section>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const starsContainer = document.getElementById('stars-container');
            const starsCount = 100;

            for (let i = 0; i < starsCount; i++) {
                const star = document.createElement('div');
                star.classList.add('star');

                const x = Math.random() * 100;
                const y = Math.random() * 100;
                const size = Math.random() * 2 + 1;
                const duration = Math.random() * 3 + 2;
                const delay = Math.random() * 5;

                star.style.left = `${x}%`;
                star.style.top = `${y}%`;
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.setProperty('--duration', `${duration}s`);
                star.style.setProperty('--delay', `${delay}s`);

                starsContainer.appendChild(star);
            }
        });
    </script>
</body>
</html>